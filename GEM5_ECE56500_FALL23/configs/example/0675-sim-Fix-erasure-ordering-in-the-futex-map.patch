From a2062c0e004a9d216e949505f22721d931df64cf Mon Sep 17 00:00:00 2001
From: Gabe Black <gabe.black@gmail.com>
Date: Thu, 2 Jun 2022 15:19:04 -0700
Subject: [PATCH 675/757] sim: Fix erasure ordering in the futex map.

Erase an element after one of its components are used to erase an
element of another map. This is an error and causes build breakage in
newer versions of gcc.

Change-Id: I83a00410cbf2ae5fc23b12080cd374965df1a5ac
Reviewed-on: https://gem5-review.googlesource.com/c/public/gem5/+/60309
Maintainer: Gabe Black <gabe.black@gmail.com>
Reviewed-by: Jason Lowe-Power <power.jg@gmail.com>
Tested-by: kokoro <noreply+kokoro@google.com>
---
 src/sim/futex_map.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/sim/futex_map.cc b/src/sim/futex_map.cc
index 8f622e2..b28e255 100644
--- a/src/sim/futex_map.cc
+++ b/src/sim/futex_map.cc
@@ -123,8 +123,8 @@ FutexMap::wakeup_bitset(Addr addr, uint64_t tgid, int bitmask)
 
         if (waiter.checkMask(bitmask)) {
             waiter.tc->activate();
-            iter = waiterList.erase(iter);
             waitingTcs.erase(waiter.tc);
+            iter = waiterList.erase(iter);
             woken_up++;
         } else {
             ++iter;
-- 
1.8.3.1

