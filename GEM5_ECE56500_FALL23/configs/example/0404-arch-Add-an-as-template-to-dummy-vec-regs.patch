From 274042a3620309814fe6d4733f69d61e9c027fac Mon Sep 17 00:00:00 2001
From: Gabe Black <gabe.black@gmail.com>
Date: Tue, 15 Mar 2022 21:11:03 -0700
Subject: [PATCH 404/757] arch: Add an "as" template to dummy vec regs.

Keep the unit tests compiling until the generic dummy vec and vec pred
regs are unnecessary and are eliminated.

Change-Id: I65d99cd3f4c41e89834b71a8af90872d8d5a4590
Reviewed-on: https://gem5-review.googlesource.com/c/public/gem5/+/57749
Maintainer: Gabe Black <gabe.black@gmail.com>
Reviewed-by: Giacomo Travaglini <giacomo.travaglini@arm.com>
Maintainer: Giacomo Travaglini <giacomo.travaglini@arm.com>
Tested-by: kokoro <noreply+kokoro@google.com>
---
 src/arch/generic/vec_pred_reg.hh | 2 ++
 src/arch/generic/vec_reg.hh      | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/src/arch/generic/vec_pred_reg.hh b/src/arch/generic/vec_pred_reg.hh
index 9495911..a9b264e 100644
--- a/src/arch/generic/vec_pred_reg.hh
+++ b/src/arch/generic/vec_pred_reg.hh
@@ -400,6 +400,8 @@ struct DummyVecPredRegContainer
     RegVal filler = 0;
     bool operator == (const DummyVecPredRegContainer &d) const { return true; }
     bool operator != (const DummyVecPredRegContainer &d) const { return true; }
+    template <typename VecElem>
+    VecElem *as() { return nullptr; }
 };
 template <>
 struct ParseParam<DummyVecPredRegContainer>
diff --git a/src/arch/generic/vec_reg.hh b/src/arch/generic/vec_reg.hh
index c818b1c..fecd5c6 100644
--- a/src/arch/generic/vec_reg.hh
+++ b/src/arch/generic/vec_reg.hh
@@ -270,6 +270,8 @@ struct DummyVecRegContainer
     RegVal filler = 0;
     bool operator == (const DummyVecRegContainer &d) const { return true; }
     bool operator != (const DummyVecRegContainer &d) const { return true; }
+    template <typename VecElem>
+    VecElem *as() { return nullptr; }
 };
 template <>
 struct ParseParam<DummyVecRegContainer>
-- 
1.8.3.1

