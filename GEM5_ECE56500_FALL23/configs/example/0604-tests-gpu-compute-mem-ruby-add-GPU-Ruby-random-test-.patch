From 11ccc87c91301e4e86e0f375cd8d9b46b1833491 Mon Sep 17 00:00:00 2001
From: Matt Sinclair <mattdsinclair@gmail.com>
Date: Fri, 29 Apr 2022 00:43:00 -0500
Subject: [PATCH 604/757] tests, gpu-compute, mem-ruby: add GPU Ruby random
 test to nightly

Add a longer test for the GPU Ruby random tester to the nightly
regression.  This test is sized to take approximately 30 minutes
while providing more coverage than the per check-in Ruby random test,
which takes 30 seconds.

Change-Id: I398feb1283b24f801275ba13d6c53d236849f2eb
Reviewed-on: https://gem5-review.googlesource.com/c/public/gem5/+/59272
Reviewed-by: Bobby Bruce <bbruce@ucdavis.edu>
Maintainer: Bobby Bruce <bbruce@ucdavis.edu>
Tested-by: kokoro <noreply+kokoro@google.com>
---
 tests/gem5/gpu/test_gpu_ruby_random.py | 67 ++++++++++++++++++++++++++--------
 1 file changed, 52 insertions(+), 15 deletions(-)

diff --git a/tests/gem5/gpu/test_gpu_ruby_random.py b/tests/gem5/gpu/test_gpu_ruby_random.py
index 83ea6e7..83f0e9f 100644
--- a/tests/gem5/gpu/test_gpu_ruby_random.py
+++ b/tests/gem5/gpu/test_gpu_ruby_random.py
@@ -24,25 +24,27 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-"""
-This test will first run the GPU protocol random tester -- it should take about
-30 seconds to run and provides good coverage for the coherence protocol.
+from testlib import *
 
-Input choices (some are default and thus implicit):
- - use small cache size to encourage races
- - use small system size to encourage races since more requests per CU (and
-   faster sim)
- - use small address range to encourage more races
- - use small episode length to encourage more races
- - 50K tests runs in ~30 seconds with reasonably good coverage
- - num-dmas = 0 because VIPER doesn't support partial cache line writes, which
-   DMAs need
+"""
+This file contains random tests for the Ruby GPU protocols.
 """
 
-from testlib import *
-
+# This test will first run the GPU protocol random tester -- it should take
+# about 30 seconds to run and provides good coverage for the coherence
+# protocol.
+#
+# Input choices (some are default and thus implicit):
+# - use small cache size to encourage races
+# - use small system size to encourage races since more requests per CU (and
+#   faster sim)
+# - use small address range to encourage more races
+# - use small episode length to encourage more races
+# - 50K tests runs in ~30 seconds with reasonably good coverage
+# - num-dmas = 0 because VIPER doesn't support partial cache line writes, which
+#   DMAs need
 gem5_verify_config(
-    name="ruby-gpu-random-test",
+    name="ruby-gpu-random-test-perCheckin",
     fixtures=(),
     verifiers=(),
     config=joinpath(
@@ -61,3 +63,38 @@ gem5_verify_config(
     valid_hosts=constants.supported_hosts,
     length=constants.quick_tag,
 )
+
+
+# This test will run the GPU protocol random tester in nightly -- it should
+# take about 30 minutes to run and provides good coverage for the coherence
+# protocol.
+#
+# Input choices (some are default and thus implicit):
+#  - use small cache size to encourage races
+#  - use small system size to encourage races since more requests per CU (and
+#    faster sim)
+#  - use small address range to encourage more races
+#  - use small episode length to encourage more races
+#  - 5M tests runs in ~30 minutes with reasonably good coverage
+#  - num-dmas = 0 because VIPER doesn't support partial cache line writes,
+#    which DMAs need
+gem5_verify_config(
+    name="ruby-gpu-random-test-nightly",
+    fixtures=(),
+    verifiers=(),
+    config=joinpath(
+        config.base_dir,
+        "configs",
+        "example",
+        "ruby_gpu_random_test.py",
+    ),
+    config_args=[
+        "--test-length",
+        "5000000",
+        "--num-dmas",
+        "0",
+    ],
+    valid_isas=(constants.vega_x86_tag,),
+    valid_hosts=constants.supported_hosts,
+    length=constants.long_tag,
+)
-- 
1.8.3.1

