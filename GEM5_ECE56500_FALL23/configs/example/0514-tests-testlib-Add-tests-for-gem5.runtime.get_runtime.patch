From de2229560990ec281b44950362c58f2407ddbd0f Mon Sep 17 00:00:00 2001
From: "Bobby R. Bruce" <bbruce@ucdavis.edu>
Date: Fri, 11 Mar 2022 17:59:02 -0800
Subject: [PATCH 514/757] tests,testlib: Add tests for
 gem5.runtime.get_runtime_isa()

Included in this patch are tests to be enabled once build/ALL/gem5.opt
has been introduced.

Change-Id: I4c7ddd366af07b6d8ba4edcbbf58a1cfc7a6cc56
Reviewed-on: https://gem5-review.googlesource.com/c/public/gem5/+/57510
Maintainer: Bobby Bruce <bbruce@ucdavis.edu>
Tested-by: kokoro <noreply+kokoro@google.com>
Reviewed-by: Jason Lowe-Power <power.jg@gmail.com>
---
 tests/gem5/configs/runtime_isa_check.py |  62 ++++++++++++++++++
 tests/gem5/multi_isa/test_multi_isa.py  | 109 ++++++++++++++++++++++++++++++++
 2 files changed, 171 insertions(+)
 create mode 100644 tests/gem5/configs/runtime_isa_check.py
 create mode 100644 tests/gem5/multi_isa/test_multi_isa.py

diff --git a/tests/gem5/configs/runtime_isa_check.py b/tests/gem5/configs/runtime_isa_check.py
new file mode 100644
index 0000000..8f17693
--- /dev/null
+++ b/tests/gem5/configs/runtime_isa_check.py
@@ -0,0 +1,62 @@
+# Copyright (c) 2022 The Regents of the University of California
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are
+# met: redistributions of source code must retain the above copyright
+# notice, this list of conditions and the following disclaimer;
+# redistributions in binary form must reproduce the above copyright
+# notice, this list of conditions and the following disclaimer in the
+# documentation and/or other materials provided with the distribution;
+# neither the name of the copyright holders nor the names of its
+# contributors may be used to endorse or promote products derived from
+# this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+"""
+This is a very simple script to test the output given by
+`gem5.runtime.get_runtime_isa`
+"""
+
+from gem5.runtime import get_runtime_isa
+from gem5.isas import ISA, get_isas_str_set, get_isa_from_str
+
+import argparse
+
+parser = argparse.ArgumentParser(
+    description="A simple script used to check the output of "
+                "`gem5.runtime.get_runtime_isa`"
+)
+
+parser.add_argument(
+    "-e",
+    "--expected-isa",
+    type=str,
+    choices=get_isas_str_set(),
+    required=True,
+    help="The expected ISA. If not returned by `get_runtime_isa`, a "
+         "non-zero exit code will be returned by the script" ,
+)
+
+args = parser.parse_args()
+runtime_isa = get_runtime_isa()
+expected_isa = get_isa_from_str(args.expected_isa)
+
+if runtime_isa == expected_isa:
+    exit(0)
+
+print(f"ISA expected: {args.expected_isa}")
+print(f"get_runtime_isa() returned: {runtime_isa.value}")
+
+exit(1)
diff --git a/tests/gem5/multi_isa/test_multi_isa.py b/tests/gem5/multi_isa/test_multi_isa.py
new file mode 100644
index 0000000..4c01072
--- /dev/null
+++ b/tests/gem5/multi_isa/test_multi_isa.py
@@ -0,0 +1,109 @@
+# Copyright (c) 2022 The Regents of the University of California
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are
+# met: redistributions of source code must retain the above copyright
+# notice, this list of conditions and the following disclaimer;
+# redistributions in binary form must reproduce the above copyright
+# notice, this list of conditions and the following disclaimer in the
+# documentation and/or other materials provided with the distribution;
+# neither the name of the copyright holders nor the names of its
+# contributors may be used to endorse or promote products derived from
+# this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+from testlib import *
+
+isa_map = {
+    "sparc": constants.sparc_tag,
+    "mips": constants.mips_tag,
+    "null": constants.null_tag,
+    "arm": constants.arm_tag,
+    "x86": constants.gcn3_x86_tag,
+    "power": constants.power_tag,
+    "riscv": constants.riscv_tag,
+}
+
+length_map = {
+    "sparc": constants.long_tag,
+    "mips": constants.long_tag,
+    "null": constants.quick_tag,
+    "arm": constants.quick_tag,
+    "x86": constants.quick_tag,
+    "power": constants.long_tag,
+    "riscv": constants.long_tag,
+}
+
+for isa in isa_map.keys():
+    gem5_verify_config(
+        name=f"runtime-isa-check_{isa}-compiled-alone",
+        verifiers=(),
+        fixtures=(),
+        config=joinpath(
+            config.base_dir,
+            "tests",
+            "gem5",
+            "configs",
+            "runtime_isa_check.py",
+        ),
+        config_args=["-e", isa],
+        valid_isas=(isa_map[isa],),
+        valid_hosts=constants.supported_hosts,
+        length=length_map[isa],
+    )
+
+for isa in isa_map.keys():
+    gem5_verify_config(
+        name=f"runtime-isa-check_{isa}-compiled-alone-"
+              "with-main-isa-set-correctly",
+        verifiers=(),
+        fixtures=(),
+        gem5_args=('--main-isa', isa),
+        config=joinpath(
+            config.base_dir,
+            "tests",
+            "gem5",
+            "configs",
+            "runtime_isa_check.py",
+        ),
+        config_args=["-e", isa],
+        valid_isas=(isa_map[isa],),
+        valid_hosts=constants.supported_hosts,
+        length=length_map[isa],
+    )
+
+
+# These tests can be enabled when the multi-isa work is completed (i.e., when
+# `build/ARM/gem5.opt` can be successfully compiled).
+
+for isa in isa_map.keys():
+    break # Remove this line to enable this test.
+    gem5_verify_config(
+        name=f"runtime-isa-check_all-compiled-with-main-isa-set-to-{isa}",
+        verifiers=(),
+        fixtures=(),
+        gem5_args=('--main-isa', isa),
+        config=joinpath(
+            config.base_dir,
+            "tests",
+            "gem5",
+            "configs",
+            "runtime_isa_check.py",
+        ),
+        config_args=["-e", isa],
+        valid_isas=(constants.all_compiled_tag),
+        valid_hosts=constants.supported_hosts,
+        length=constants.long_tag,
+    )
-- 
1.8.3.1

